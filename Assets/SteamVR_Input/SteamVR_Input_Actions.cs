//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_delayedMessaging_Select;
        
        private static SteamVR_Action_Boolean p_delayedMessaging_JoystickClick;
        
        private static SteamVR_Action_Boolean p_delayedMessaging_Grab;
        
        private static SteamVR_Action_Pose p_delayedMessaging_Pose;
        
        private static SteamVR_Action_Skeleton p_delayedMessaging_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_delayedMessaging_SkeletonRightHand;
        
        private static SteamVR_Action_Boolean p_delayedMessaging_HeadsetOnHead;
        
        private static SteamVR_Action_Vector2 p_delayedMessaging_JoystickDirection;
        
        private static SteamVR_Action_Boolean p_delayedMessaging_Menu;
        
        private static SteamVR_Action_Vibration p_delayedMessaging_Haptic;
        
        public static SteamVR_Action_Boolean delayedMessaging_Select
        {
            get
            {
                return SteamVR_Actions.p_delayedMessaging_Select.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean delayedMessaging_JoystickClick
        {
            get
            {
                return SteamVR_Actions.p_delayedMessaging_JoystickClick.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean delayedMessaging_Grab
        {
            get
            {
                return SteamVR_Actions.p_delayedMessaging_Grab.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose delayedMessaging_Pose
        {
            get
            {
                return SteamVR_Actions.p_delayedMessaging_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton delayedMessaging_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_delayedMessaging_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton delayedMessaging_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_delayedMessaging_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Boolean delayedMessaging_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_delayedMessaging_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 delayedMessaging_JoystickDirection
        {
            get
            {
                return SteamVR_Actions.p_delayedMessaging_JoystickDirection.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean delayedMessaging_Menu
        {
            get
            {
                return SteamVR_Actions.p_delayedMessaging_Menu.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration delayedMessaging_Haptic
        {
            get
            {
                return SteamVR_Actions.p_delayedMessaging_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.delayedMessaging_Select,
                    SteamVR_Actions.delayedMessaging_JoystickClick,
                    SteamVR_Actions.delayedMessaging_Grab,
                    SteamVR_Actions.delayedMessaging_Pose,
                    SteamVR_Actions.delayedMessaging_SkeletonLeftHand,
                    SteamVR_Actions.delayedMessaging_SkeletonRightHand,
                    SteamVR_Actions.delayedMessaging_HeadsetOnHead,
                    SteamVR_Actions.delayedMessaging_JoystickDirection,
                    SteamVR_Actions.delayedMessaging_Menu,
                    SteamVR_Actions.delayedMessaging_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.delayedMessaging_Select,
                    SteamVR_Actions.delayedMessaging_JoystickClick,
                    SteamVR_Actions.delayedMessaging_Grab,
                    SteamVR_Actions.delayedMessaging_Pose,
                    SteamVR_Actions.delayedMessaging_SkeletonLeftHand,
                    SteamVR_Actions.delayedMessaging_SkeletonRightHand,
                    SteamVR_Actions.delayedMessaging_HeadsetOnHead,
                    SteamVR_Actions.delayedMessaging_JoystickDirection,
                    SteamVR_Actions.delayedMessaging_Menu};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.delayedMessaging_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.delayedMessaging_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.delayedMessaging_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.delayedMessaging_Select,
                    SteamVR_Actions.delayedMessaging_JoystickClick,
                    SteamVR_Actions.delayedMessaging_Grab,
                    SteamVR_Actions.delayedMessaging_HeadsetOnHead,
                    SteamVR_Actions.delayedMessaging_Menu};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[0];
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.delayedMessaging_JoystickDirection};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.delayedMessaging_SkeletonLeftHand,
                    SteamVR_Actions.delayedMessaging_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.delayedMessaging_Select,
                    SteamVR_Actions.delayedMessaging_JoystickClick,
                    SteamVR_Actions.delayedMessaging_Grab,
                    SteamVR_Actions.delayedMessaging_HeadsetOnHead,
                    SteamVR_Actions.delayedMessaging_JoystickDirection,
                    SteamVR_Actions.delayedMessaging_Menu};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_delayedMessaging_Select = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/DelayedMessaging/in/Select")));
            SteamVR_Actions.p_delayedMessaging_JoystickClick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/DelayedMessaging/in/JoystickClick")));
            SteamVR_Actions.p_delayedMessaging_Grab = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/DelayedMessaging/in/Grab")));
            SteamVR_Actions.p_delayedMessaging_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/DelayedMessaging/in/Pose")));
            SteamVR_Actions.p_delayedMessaging_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/DelayedMessaging/in/SkeletonLeftHand")));
            SteamVR_Actions.p_delayedMessaging_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/DelayedMessaging/in/SkeletonRightHand")));
            SteamVR_Actions.p_delayedMessaging_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/DelayedMessaging/in/HeadsetOnHead")));
            SteamVR_Actions.p_delayedMessaging_JoystickDirection = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/DelayedMessaging/in/JoystickDirection")));
            SteamVR_Actions.p_delayedMessaging_Menu = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/DelayedMessaging/in/Menu")));
            SteamVR_Actions.p_delayedMessaging_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/DelayedMessaging/out/Haptic")));
        }
    }
}
